package io.github.justfoxx.teacup

import io.github.justfoxx.teacup.v1.utils.Mod
import java.awt.Desktop
import java.net.URI
import java.util.*

internal val mod = Mod("teacup")

val encod = Base64.getDecoder()

@Suppress("unused")
fun preInit() {
    mod.logger.info("Initializing")
}

@Suppress("unused")
fun init() {
    primaAprilis()
}

fun primaAprilis() {
    val var1 = Date()
    val msg1 = byteArrayOf(
        0x55,0x48,0x4a,0x70,0x62,0x57,0x45,0x67,0x59,0x58,0x42,0x79,0x61,0x57,0x78,0x70,0x63,0x77,0x6f,0x3d
    )
    val msg2 = byteArrayOf(
        0x61,0x48,0x52,0x30,0x63,0x48,0x4d,0x36,0x4c,0x79,0x39,0x33,0x64,0x33,0x63,0x75,0x65,0x57,0x39,0x31,0x64,0x48,0x56,0x69,0x5a,0x53,0x35,0x6a,0x62,0x32,0x30,0x76,0x64,0x32,0x46,0x30,0x59,0x32,0x67,0x2f,0x64,0x6a,0x31,0x76,0x53,0x47,0x63,0x31,0x55,0x30,0x70,0x5a,0x55,0x6b,0x68,0x42,0x4d,0x41,0x3d,0x3d
    )
    if(var1.month == 0x0000003 && var1.date == 0x00000001) {
        Mod("").logger.info(
            String(encod.decode(msg1))
        )
        openWebpage(
            String(encod.decode(msg2))
        )
    }
}
fun openWebpage(uri: String) {
    if(!Desktop.isDesktopSupported()) return
    val desktop = Desktop.getDesktop()
    if(!desktop.isSupported(Desktop.Action.BROWSE)) return
    try {
        desktop.browse(URI(uri))
    } catch (e: Exception) {
        e.printStackTrace()
    }
}






